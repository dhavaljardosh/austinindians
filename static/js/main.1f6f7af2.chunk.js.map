{"version":3,"sources":["assets/page-screenshot.png","assets/swad/swad1.mp4","assets/austinindians-logo.png","pages/LandingPage.js","pages/Events.js","pages/Gallery.js","pages/Social.js","pages/Swad.js","hooks/viewport/types/view-sizes.ts","hooks/viewport/view-size-utils.ts","hooks/viewport/viewport-provider.tsx","hooks/viewport/use-media-queries.tsx","hooks/viewport/views/view-small.tsx","hooks/viewport/views/view-medium.tsx","hooks/viewport/views/view-large.tsx","hooks/viewport/views/view-extra-large.tsx","hooks/viewport/views/max-viewport.tsx","hooks/viewport/views/viewport.tsx","components/FoodService/LargeView.tsx","components/Card/SmallView.tsx","pages/FoodService.js","pages/Root.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Footer","React","createElement","Box","sx","bgcolor","color","component","Typography","variant","align","gutterBottom","Copyright","Link","to","style","Date","getFullYear","LandingPage","Fragment","Container","flexGrow","Grid","container","spacing","columns","item","xs","md","src","require","alt","height","padding","Events","Gallery","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","doc","GoogleSpreadsheet","header","background","outer","display","gridTemplateColumns","gridTemplateRows","border","marginTop","marginRight","inner","Social","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","headers","setHeaders","useEffect","_fetchData","_asyncToGenerator","_callee","newSheet","fetchedData","_context","useServiceAccountAuth","client_email","process","private_key","replace","loadInfo","sheetsByIndex","getRows","map","t0","console","t1","log","t2","headerValues","t3","apply","arguments","fetchData","concat","_toConsumableArray","_objectSpread","borderRadius","overflow","width","JSON","stringify","Swad","parent","ReactPlayer","url","playing","loop","muted","position","top","bottom","marginLeft","minHeight","alignItems","justifyContent","defaultViewSizes","SMALL","MEDIUM","LARGE","EXTRA_LARGE","ViewSizes","getViewSizeFromDeviceInformation","viewSizes","deviceInformation","baseFontSizePx","resolutionWidth","widthInPixels","widthInMillimeters","physicalScreenWidth","deviceViewSize","Math","round","getTrueWidth","handleBaseFontSizePx","tablet","mobile","defaults","validViewSize","setValidViewSize","size","ViewportContext","useViewport","ViewportProvider","props","children","validatedViewSizes","entries","reduce","acc","_ref","_ref2","convertToUseBaseFontSizePx","_React$useState","_React$useState2","viewSize","setViewSize","mediaQueryLists","window","matchMedia","getValidViewSize","defaultValidMediaQuery","filter","mql","matches","_ref3","_ref4","_ref5","validSize","validMql","_ref6","currentSize","currentMql","handler","addListener","removeListener","useMediaQueries","viewportContext","Provider","ViewSmall","_React$Component","_inherits","_super","_createSuper","_classCallCheck","_createClass","get","ViewLarge","MaxViewportContext","useMaxViewport","Viewport","_useViewport","maxSize","appliedViewSize","validChild","child","childViewSize","StyledTableCell","styled","TableCell","theme","_defineProperty","tableCellClasses","head","backgroundColor","palette","common","black","white","body","fontSize","StyledTableRow","TableRow","&:nth-of-type(odd)","action","hover","&:last-child td, &:last-child th","LargeView","page","setPage","_React$useState3","_React$useState4","rowsPerPage","setRowsPerPage","emptyRows","max","TableContainer","Paper","Table","stickyHeader","minWidth","aria-label","TableHead","TableBody","row","_","index","colSpan","TablePagination","rowsPerPageOptions","label","count","SelectProps","inputProps","native","onPageChange","event","newPage","onRowsPerPageChange","parseInt","target","ActionsComponent","TablePaginationActions","SmallView","Card","CardContent","mb","CardActions","Button","href","rel","tableToJson","table","j","FoodService","mapTable","sort","a","b","margin","paddingTop","pages","Root","anchorElNav","setAnchorElNav","handleCloseNavMenu","AppBar","maxWidth","Toolbar","disableGutters","Avatar","noWrap","mr","fontFamily","fontWeight","letterSpacing","textDecoration","IconButton","aria-controls","aria-haspopup","onClick","currentTarget","MenuIcon","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","textAlign","toLowerCase","my","Routes","Route","path","element","errorElement","Outlet","App","HashRouter","basename","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.1f6f7af2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/page-screenshot.a30adecf.png\";","module.exports = __webpack_public_path__ + \"static/media/swad1.dc8af9fa.mp4\";","module.exports = __webpack_public_path__ + \"static/media/austinindians-logo.059fa318.png\";","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport { Container } from \"@mui/system\";\nimport { Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nconst LandingPage = () => {\n  return (\n    <>\n      <Container>\n        <Box sx={{ flexGrow: 1 }}>\n          <Grid container spacing={2} columns={12}>\n            <Grid item xs={12} md={4}>\n              <Box p={10}>\n                <img\n                  src={require(\"../assets/page-screenshot.png\")}\n                  alt=\"Screenshot\"\n                  height={500}\n                />\n              </Box>\n            </Grid>\n            <Grid item xs={12} md={8}>\n              <Box padding={10}>\n                <h1>Biggest Indians community of Austin</h1>\n                <h4>We share about Events, Food, Festivals and much more...</h4>\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n      <Footer />\n    </>\n  );\n};\n\nconst Footer = () => {\n  return (\n    <Box sx={{ bgcolor: \"#223843\", p: 6, color: \"#EFF1F3\" }} component=\"footer\">\n      <Typography variant=\"h6\" align=\"center\" gutterBottom>\n        Footer\n      </Typography>\n      <Typography variant=\"subtitle1\" align=\"center\" component=\"p\">\n        Help us expand this community to all the Indians folks of Greater Austin\n        Area.\n      </Typography>\n      <Copyright />\n    </Box>\n  );\n};\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" align=\"center\">\n      {\"Copyright © \"}\n      <Link to={\"/\"} style={{ color: \"#EFF1F3\" }}>\n        www.theaustinindians.com\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nexport default LandingPage;\n","import React from \"react\";\n\nconst Events = () => {\n  return (\n    <div>\n      <h1>This is the events page</h1>\n    </div>\n  );\n};\n\nexport default Events;\n","import React from \"react\";\n\nconst Gallery = () => {\n  return (\n    <div>\n      <h1>Page with Pictures</h1>\n    </div>\n  );\n};\n\nexport default Gallery;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\n\nconst doc = new GoogleSpreadsheet(\n  \"1oFDveSz0CytLmHR2_36bL3glnyrfzphOhUQ4xRE0gj4\"\n);\n\nconst Social = () => {\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      // Initialize Auth - see https://theoephraim.github.io/node-google-spreadsheet/#/getting-started/authentication\n      await doc.useServiceAccountAuth({\n        // env var values are copied from service account credentials generated by google\n        // see \"Authentication\" section in docs for more info\n        client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n        private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY.replace(\n          /\\\\n/gm,\n          \"\\n\"\n        ),\n      });\n\n      let loadedInfo = await doc.loadInfo(); // loads sheets\n\n      const newSheet = await doc.sheetsByIndex[0];\n      const fetchedData = await (await newSheet.getRows()).map(\n        (item, i) => item[\"_rawData\"]\n      );\n      setData(fetchedData);\n      console.log((await newSheet.getRows())[0][\"_rawData\"]);\n      setHeaders(await newSheet.headerValues);\n    }\n\n    fetchData();\n  }, []);\n\n  if (!data.length || !headers.length) {\n    return <div>Loading</div>;\n  }\n\n  return (\n    <>\n      <h1>Fetched from Google Sheets</h1>\n      <ul>\n        {[headers, ...data].map((item, i) => (\n          <Fragment key={i}>\n            <div\n              style={{\n                ...(i == 0 ? style.header : {}),\n                ...style.outer,\n              }}\n            >\n              <div>{item[0]}</div>\n              <div>{item[1]}</div>\n              <div>{item[2]}</div>\n              {i === 0 ? (\n                <div>{item[2]}</div>\n              ) : (\n                <div>\n                  <div\n                    style={{\n                      borderRadius: \"50%\",\n                      overflow: \"hidden\",\n                      height: 50,\n                      width: 50,\n                    }}\n                  >\n                    <img\n                      alt={JSON.stringify(item[3])}\n                      src={item[3]}\n                      height={50}\n                      width={50}\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          </Fragment>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nconst style = {\n  header: {\n    background: \"green\",\n    color: \"white\",\n  },\n  outer: {\n    display: \"grid\",\n    gridTemplateColumns: \"200px 200px 100px 100px\",\n    gridTemplateRows: \"40px 10px\",\n    border: \"2px solid gray\",\n    marginTop: -2,\n    padding: 10,\n    marginRight: 40,\n  },\n  inner: {},\n};\n\nexport default Social;\n","import React from \"react\";\nimport ReactPlayer from \"react-player\";\n\nexport const Swad = () => {\n  return (\n    <div style={style.parent}>\n      <div style={style.outer}>\n        <ReactPlayer\n          url={require(\"../assets/swad/swad1.mp4\")}\n          playing={true}\n          height={\"100vh\"}\n          loop={true}\n          muted={true}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst style = {\n  parent: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    minHeight: \"100vh\",\n    background: \"black\",\n    width: \"100%\",\n  },\n  outer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n};\n","export interface ViewSizeDefinitions {\n  SMALL: number;\n  MEDIUM: number;\n  LARGE: number;\n  EXTRA_LARGE: number;\n}\n\nconst ViewSizeValuesPx: ViewSizeDefinitions = {\n  SMALL: 0,\n  MEDIUM: 576,\n  LARGE: 992,\n  EXTRA_LARGE: 1200\n};\n\nexport const defaultViewSizes: ViewSizeDefinitions = {\n  SMALL: ViewSizeValuesPx.SMALL,\n  MEDIUM: ViewSizeValuesPx.MEDIUM,\n  LARGE: ViewSizeValuesPx.LARGE,\n  EXTRA_LARGE: ViewSizeValuesPx.EXTRA_LARGE\n};\n\nexport enum ViewSizes {\n  SMALL = 'SMALL',\n  MEDIUM = 'MEDIUM',\n  LARGE = 'LARGE',\n  EXTRA_LARGE = 'EXTRA_LARGE'\n}\n","import { DeviceInformation, ViewSizeDefinitions } from './types';\n\nconst MM_TO_INCHES = 25.4;\nconst COMMON_DENSITY = 160;\n\nexport const handleBaseFontSizePx = (value: number, baseFontSizePx?: number): number => {\n  return baseFontSizePx ? value / baseFontSizePx : value;\n};\n\nexport const convertToUseBaseFontSizePx = (\n  viewSizes: ViewSizeDefinitions,\n  baseFontSizePx: number\n): ViewSizeDefinitions =>\n  Object.entries(viewSizes).reduce((acc: any, [key, value]) => {\n    acc[key] = value / baseFontSizePx;\n    return acc;\n  }, {}) as unknown as ViewSizeDefinitions;\n\nconst getTrueWidth = (widthInPixels: number, widthInMillimeters: number): number => {\n  return Math.round((widthInPixels / (widthInPixels / (widthInMillimeters / MM_TO_INCHES))) * COMMON_DENSITY);\n};\n\nexport const getViewSizeFromDeviceInformation = (\n  viewSizes: ViewSizeDefinitions,\n  deviceInformation: DeviceInformation,\n  baseFontSizePx?: number\n): number => {\n  if (typeof deviceInformation.resolutionWidth === 'number' && deviceInformation.resolutionWidth > 0) {\n    const { resolutionWidth: widthInPixels, physicalScreenWidth: widthInMillimeters } = deviceInformation;\n    let deviceViewSize: number = widthInPixels;\n\n    if (widthInMillimeters) {\n      deviceViewSize = getTrueWidth(widthInPixels, widthInMillimeters);\n    }\n\n    return handleBaseFontSizePx(deviceViewSize, baseFontSizePx);\n  } else if (deviceInformation.tablet === true) {\n    return viewSizes.MEDIUM;\n  } else if (deviceInformation.mobile === true) {\n    return viewSizes.SMALL;\n  } else {\n    return viewSizes.LARGE;\n  }\n};\n","import * as React from \"react\";\n\nimport {\n  DeviceInformation,\n  defaultViewSizes,\n  ViewSizes,\n  ViewSizeDefinitions,\n} from \"./types\";\nimport { useMediaQueries } from \"./use-media-queries\";\nimport {\n  convertToUseBaseFontSizePx,\n  getViewSizeFromDeviceInformation,\n} from \"./view-size-utils\";\n\nexport interface IViewportContext {\n  /**\n   * Determines the valid Viewport component to render.\n   */\n  validViewSize: number;\n  /**\n   * Function for setting a new ValidViewSize in the context.\n   */\n  setValidViewSize: (number: number) => void;\n  /**\n   * Either client defined pixel definitions for each View Size or\n   * the default values.\n   */\n  viewSizes: ViewSizeDefinitions;\n  /**\n   * Used to account for the base font size when determining breakpoints.\n   */\n  baseFontSizePx?: number;\n}\n\n/**\n * The defaults will be used if the `<ViewportProvider>` is not used by the client.\n */\nconst defaults: IViewportContext = {\n  viewSizes: defaultViewSizes,\n  validViewSize: defaultViewSizes.SMALL,\n  setValidViewSize: (size: number) => 0,\n};\n\nexport const ViewportContext: React.Context<IViewportContext> =\n  React.createContext<IViewportContext>(defaults);\n\nexport interface ViewportProviderProps {\n  /**\n   * Client defined ViewSizeDefinitions. Will fall back to defaults if not provided.\n   */\n  viewSizes?: ViewSizeDefinitions;\n\n  /**\n   * Account for the base font size when determining breakpoints.\n   */\n  baseFontSizePx?: number;\n\n  /**\n   * Device information from the context object.\n   */\n  deviceInformation?: DeviceInformation;\n}\n\n/**\n * This component is meant to be a top-level component to provide ViewportContext\n * to its consumers\n * @returns A `<ViewportContext.Provider>`\n */\nconst ViewportProvider: React.FC<any> = (props) => {\n  const { viewSizes, baseFontSizePx, deviceInformation, children } = props;\n\n  let validatedViewSizes: ViewSizeDefinitions = viewSizes || defaultViewSizes;\n\n  if (baseFontSizePx) {\n    validatedViewSizes = convertToUseBaseFontSizePx(\n      validatedViewSizes,\n      baseFontSizePx\n    );\n  }\n\n  // set initial view size from DeviceInformation\n  let deviceViewSize;\n  if (deviceInformation) {\n    deviceViewSize = getViewSizeFromDeviceInformation(\n      validatedViewSizes,\n      deviceInformation,\n      baseFontSizePx\n    );\n  }\n  const [viewSize, setViewSize] = React.useState<number>(\n    deviceViewSize || defaults.validViewSize\n  );\n\n  const validViewSize = useMediaQueries({\n    viewSizes: validatedViewSizes,\n    deviceInformation,\n    baseFontSizePx,\n  });\n\n  React.useEffect(() => {\n    setViewSize(validViewSize);\n  }, [validViewSize]);\n\n  const viewportContext: IViewportContext = {\n    baseFontSizePx,\n    validViewSize: viewSize,\n    setValidViewSize: setViewSize,\n    viewSizes: validatedViewSizes,\n  };\n\n  return (\n    <ViewportContext.Provider value={viewportContext}>\n      {children}\n    </ViewportContext.Provider>\n  );\n};\n\n/**\n * This hook use called by the `<Viewport>` and `<MaxViewport>` components to retrieve the `ViewportContext`.\n */\nexport const useViewport = (): IViewportContext =>\n  React.useContext<IViewportContext>(ViewportContext);\n\nexport default ViewportProvider;\n","import * as React from 'react';\nimport { ViewSizeDefinitions } from './types';\nimport { DeviceInformation } from './types';\n\nexport interface UseMediaQueriesProps {\n  viewSizes: ViewSizeDefinitions;\n  baseFontSizePx?: number;\n  deviceInformation?: DeviceInformation;\n}\n\n/**\n * Hook used to enable media query listeners at specified ViewSizes.\n * @returns The valid view size to determine the appropriate `View` component to render.\n */\nexport function useMediaQueries(props: UseMediaQueriesProps): number {\n  const { viewSizes, baseFontSizePx } = props;\n\n  let mediaQueryLists: [number, MediaQueryList][];\n\n  if (typeof window !== 'undefined') {\n    mediaQueryLists = Object.entries(viewSizes).map(([_, value]) => [\n      value,\n      window.matchMedia(`(min-width: ${baseFontSizePx ? value * baseFontSizePx : value}px)`) // If using baseFontSizePx, need to multiply by baseFontSizePx to get actual min-width\n    ]);\n  }\n\n  const getValidViewSize = (): number => {\n    let validViewSize: number = viewSizes.SMALL;\n\n    if (typeof window !== 'undefined' && mediaQueryLists.length > 0) {\n      const defaultValidMediaQuery: [number, MediaQueryList] = mediaQueryLists[0];\n      const validMediaQueryList: [number, MediaQueryList] = mediaQueryLists\n        .filter(mql => mql[1].matches)\n        .reduce(([validSize, validMql], [currentSize, currentMql]) => {\n          if (validSize > currentSize) {\n            return [validSize, validMql];\n          }\n          return [currentSize, currentMql];\n        }, defaultValidMediaQuery);\n\n      validViewSize = validMediaQueryList[0];\n    }\n\n    return validViewSize;\n  };\n\n  const [viewSize, setViewSize] = React.useState<number>(getValidViewSize);\n\n  React.useEffect(() => {\n    const handler = () => setViewSize(getValidViewSize);\n    if (mediaQueryLists && mediaQueryLists.length > 0) {\n      mediaQueryLists.forEach(mql => mql[1].addListener(handler));\n    }\n    // remove listeners on cleanup\n    return () => {\n      if (mediaQueryLists && mediaQueryLists.length > 0) {\n        mediaQueryLists.forEach(mql => mql[1].removeListener(handler));\n      }\n    };\n  }, []);\n\n  return viewSize;\n}\n","import * as React from 'react';\n\nimport { ViewProps, ViewSizes } from '../types';\n\nexport class ViewSmall extends React.Component<ViewProps> {\n  public render() {\n    return <>{this.props.children || null}</>;\n  }\n\n  public static get viewSize() {\n    return ViewSizes.SMALL;\n  }\n\n  public static get displayName() {\n    return 'viewportView-small';\n  }\n}\n","import * as React from 'react';\n\nimport { ViewProps, ViewSizes } from '../types';\n\nexport class ViewMedium extends React.Component<ViewProps> {\n  public render() {\n    return <>{this.props.children || null}</>;\n  }\n\n  public static get viewSize() {\n    return ViewSizes.MEDIUM;\n  }\n\n  public static get displayName() {\n    return 'viewportView-medium';\n  }\n}\n","import * as React from 'react';\n\nimport { ViewProps, ViewSizes } from '../types';\n\nexport class ViewLarge extends React.Component<ViewProps> {\n  public render() {\n    return <>{this.props.children || null}</>;\n  }\n\n  public static get viewSize() {\n    return ViewSizes.LARGE;\n  }\n\n  public static get displayName() {\n    return 'viewportView-large';\n  }\n}\n","import * as React from 'react';\n\nimport { ViewProps, ViewSizes } from '../types';\n\nexport class ViewExtraLarge extends React.Component<ViewProps> {\n  public render() {\n    return <>{this.props.children || null}</>;\n  }\n\n  public static get viewSize() {\n    return ViewSizes.EXTRA_LARGE;\n  }\n\n  public static get displayName() {\n    return 'viewportView-extra_large';\n  }\n}\n","import * as React from \"react\";\nimport { ViewSizes } from \"../types\";\nimport { useViewport } from \"../viewport-provider\";\n\nexport const MaxViewportContext = React.createContext<ViewSizes | undefined>(\n  undefined\n);\n\nexport interface MaxViewportProps {\n  maxSize: ViewSizes;\n}\n\n/**\n * Used to limit the maximum view size for child components.\n */\nexport const MaxViewport: React.FC<any> = (props) => {\n  const { maxSize } = props;\n  const { viewSizes }: any = useViewport();\n  // check to see if the maxSize was set higher up in the tree\n  const parentMaxSize: any = useMaxViewport();\n  const appliedMaxSize =\n    parentMaxSize && viewSizes[parentMaxSize] < viewSizes[maxSize]\n      ? parentMaxSize\n      : maxSize;\n\n  return (\n    <MaxViewportContext.Provider value={appliedMaxSize}>\n      {props.children}\n    </MaxViewportContext.Provider>\n  );\n};\n\nMaxViewport.displayName = \"MaxViewport\";\n\nexport const useMaxViewport = (): ViewSizes | undefined =>\n  React.useContext(MaxViewportContext);\n","import * as React from 'react';\nimport { ViewProps, ViewClass, ViewSizes } from '../types';\nimport { useViewport } from '../viewport-provider';\nimport { useMaxViewport } from './max-viewport';\n\nexport interface ViewportChild<P = ViewProps> extends React.ReactElement<P> {\n  readonly type: React.ComponentClass<P> & ViewClass;\n}\n\nexport type ViewportChildren = ViewportChild | Array<ViewportChild>;\n\ninterface ViewportProps {\n  children: ViewportChildren;\n}\n\n/**\n * Parent container for the other Viewport components:\n * `<ViewSmall>`, `<ViewMedium>`, `<ViewLarge>`,`<ViewExtraLarge>`\n */\nconst Viewport: React.FC<ViewportProps> = ({ children }) => {\n  const { viewSizes, validViewSize } = useViewport();\n  const maxSize = useMaxViewport();\n\n  const appliedViewSize: number = maxSize && viewSizes[maxSize] < validViewSize ? viewSizes[maxSize] : validViewSize;\n\n  function validChild(): ViewportChild | null {\n    let validChild: ViewportChild | null = null;\n\n    React.Children.forEach(children, (child: ViewportChild<ViewProps>) => {\n      const childViewSize = child.type && viewSizes[child.type.viewSize];\n      if (typeof childViewSize === 'number' && childViewSize <= appliedViewSize) {\n        if (!validChild) {\n          validChild = child;\n        } else if (childViewSize > viewSizes[validChild.type.viewSize]) {\n          validChild = child;\n        }\n      }\n    });\n\n    return validChild;\n  }\n\n  return <>{validChild()}</>;\n};\n\nexport default Viewport;\n","import * as React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { TableFooter, TablePagination } from \"@mui/material\";\nimport TablePaginationActions from \"@mui/material/TablePagination/TablePaginationActions\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  \"&:last-child td, &:last-child th\": {\n    border: 0,\n  },\n}));\n\nconst LargeView = ({ data, headers }: any) => {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const handleChangePage = (event: any, newPage: any) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: any) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table\n        stickyHeader\n        sx={{ minWidth: 700 }}\n        aria-label=\"customized table\"\n        size=\"small\"\n      >\n        <TableHead>\n          <TableRow>\n            {headers.map((i: any) => (\n              <StyledTableCell>{i}</StyledTableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {(rowsPerPage > 0\n            ? data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : data\n          ).map((row: any, i: number) => (\n            <StyledTableRow key={headers[i]}>\n              {headers.map((_: any, index: any) => (\n                <StyledTableCell align=\"left\">\n                  {row[headers[index]]}\n                </StyledTableCell>\n              ))}\n            </StyledTableRow>\n          ))}\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        {/* <TableFooter>\n          <TableRow>\n            \n          </TableRow>\n        </TableFooter> */}\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25, 30, { label: \"All\", value: -1 }]}\n        colSpan={4}\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        style={{\n          background: \"lightgray\",\n        }}\n        SelectProps={{\n          inputProps: {\n            \"aria-label\": \"rows per page\",\n          },\n          native: true,\n        }}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        ActionsComponent={TablePaginationActions}\n      />\n    </TableContainer>\n  );\n};\n\nexport default LargeView;\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  >\n    •\n  </Box>\n);\n\nexport default function SmallView({ data, headers }: any) {\n  return (\n    <Card sx={{ minWidth: 275 }} style={{ marginTop: 8 }}>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          {data[headers[3]]}\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {data[headers[0]]}\n        </Typography>\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n          {data[headers[1]]}\n        </Typography>\n        <Typography variant=\"body2\">{data[headers[2]]}</Typography>\n      </CardContent>\n      <CardActions>\n        {data[headers[6]] && (\n          <Button\n            size=\"small\"\n            href={data[headers[6]]}\n            rel=\"noopener noreferrer\"\n            target=\"__blank\"\n          >\n            Learn More\n          </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport { ViewLarge, ViewMedium, ViewSmall, Viewport } from \"../hooks/viewport\";\nimport LargeView from \"../components/FoodService/LargeView\";\nimport SmallView from \"../components/Card/SmallView\";\n\nconst doc = new GoogleSpreadsheet(\n  \"1oFDveSz0CytLmHR2_36bL3glnyrfzphOhUQ4xRE0gj4\"\n);\n\nconst tableToJson = (table) => {\n  console.log(table);\n  var data = [];\n  for (let i = 1; i < table.length; i++) {\n    let item = {};\n    for (let j = 0; j < table[0].length; j++) {\n      item[table[0][j]] = table[i][j];\n    }\n    data.push(item);\n  }\n  return data;\n};\n\nconst FoodService = () => {\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      await doc.useServiceAccountAuth({\n        // env var values are copied from service account credentials generated by google\n        // see \"Authentication\" section in docs for more info\n        client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n        private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY.replace(\n          /\\\\n/gm,\n          \"\\n\"\n        ),\n      });\n\n      await doc.loadInfo(); // loads sheets\n\n      const newSheet = await doc.sheetsByIndex[1];\n      const fetchedData = await (\n        await newSheet.getRows()\n      ).map((item, i) => item[\"_rawData\"]);\n      const headerValues = await newSheet.headerValues;\n      const mapTable = tableToJson([headerValues, ...fetchedData]);\n      mapTable.sort((a, b) =>\n        a[headerValues[0]] > b[headerValues[0]] ? 1 : -1\n      );\n      setHeaders(headerValues);\n      setData(mapTable);\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <Viewport>\n        <ViewLarge>\n          <div style={{ margin: 60 }}>\n            <LargeView data={data} headers={headers} />\n          </div>\n\n          {/* <ul>\n            Food Service\n            {[headers, ...data].map((item, i) => (\n              <Fragment key={i}>\n                <div\n                  style={{\n                    ...(i == 0 ? style.header : {}),\n                    ...style.outer,\n                  }}\n                >\n                  <div>{item[0]}</div>\n                  <div>{item[1]}</div>\n                  <div>{item[2]}</div>\n                  {i === 0 ? (\n                    <div>{item[2]}</div>\n                  ) : (\n                    <div>\n                      <div\n                        style={{\n                          borderRadius: \"50%\",\n                          overflow: \"hidden\",\n                          height: 50,\n                          width: 50,\n                        }}\n                      >\n                        <img\n                          alt={JSON.stringify(item[3])}\n                          src={item[3]}\n                          height={50}\n                          width={50}\n                        />\n                      </div>\n                    </div>\n                  )}\n                  <div>{item[4]}</div>\n                  <div>{item[5]}</div>\n                  <div>{item[6]}</div>\n                </div>\n              </Fragment>\n            ))}\n          </ul> */}\n        </ViewLarge>\n        {/* <ViewMedium>Medium View</ViewMedium> */}\n        <ViewSmall>\n          <div style={{ margin: 7, paddingTop: 2 }}>\n            {data.map((item) => {\n              return <SmallView data={item} headers={headers} />;\n            })}\n          </div>\n        </ViewSmall>\n      </Viewport>\n    </>\n  );\n};\n\nconst style = {\n  header: {\n    background: \"green\",\n    color: \"white\",\n  },\n  outer: {\n    display: \"grid\",\n    gridTemplateColumns: \"200px 200px 200px 200px 200px 200px\",\n    gridTemplateRows: \"100px auto\",\n    border: \"2px solid gray\",\n    marginTop: -2,\n    padding: 10,\n    marginRight: 40,\n  },\n  inner: {},\n};\n\nexport default FoodService;\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { Link, Outlet, Route, Routes } from \"react-router-dom\";\nimport LandingPage from \"./LandingPage\";\nimport Events from \"./Events\";\nimport Gallery from \"./Gallery\";\nimport Social from \"./Social\";\nimport { Advertise } from \"./Advertise\";\nimport { Swad } from \"./Swad\";\nimport FoodService from \"./FoodService\";\n\nconst pages = [\"Events\", \"Gallery\", \"Social\"];\nconst settings = [\"Profile\", \"Account\", \"Dashboard\", \"Logout\"];\n\nconst Root = () => {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <>\n      <AppBar\n        position=\"static\"\n        style={{ background: \"#FFCF00\", color: \"black\" }}\n      >\n        <Container maxWidth=\"xl\">\n          <Toolbar disableGutters>\n            <Avatar\n              alt=\"Remy Sharp\"\n              src={require(\"../assets/austinindians-logo.png\")}\n              style={{ margin: \"0px 10px\" }}\n            />\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"a\"\n              href=\"/\"\n              sx={{\n                mr: 2,\n                display: { xs: \"none\", md: \"flex\" },\n                fontFamily: \"monospace\",\n                fontWeight: 700,\n                letterSpacing: \".3rem\",\n                color: \"inherit\",\n                textDecoration: \"none\",\n              }}\n            >\n              AustinIndians\n            </Typography>\n            <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={handleCloseNavMenu}\n                sx={{\n                  display: { xs: \"block\", md: \"none\" },\n                }}\n              >\n                {pages.map((page) => (\n                  <Link to={`${page}`} style={{ textDecoration: \"none\" }}>\n                    <MenuItem key={page} onClick={handleCloseNavMenu}>\n                      <Typography textAlign=\"center\" color={\"black\"}>\n                        {page}\n                      </Typography>\n                    </MenuItem>\n                  </Link>\n                ))}\n              </Menu>\n            </Box>\n            <Typography\n              variant=\"h5\"\n              noWrap\n              component=\"a\"\n              href=\"\"\n              sx={{\n                mr: 2,\n                display: { xs: \"flex\", md: \"none\" },\n                flexGrow: 1,\n                fontFamily: \"monospace\",\n                fontWeight: 700,\n                letterSpacing: \".3rem\",\n                color: \"inherit\",\n                textDecoration: \"none\",\n              }}\n            >\n              AustinIndians\n            </Typography>\n            <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n              {pages.map((page) => (\n                <Link\n                  to={`${page.toLowerCase()}`}\n                  style={{ textDecoration: \"none\" }}\n                >\n                  <Button\n                    key={page}\n                    onClick={handleCloseNavMenu}\n                    sx={{ my: 2, color: \"black\", display: \"block\" }}\n                  >\n                    {page}\n                  </Button>\n                </Link>\n              ))}\n            </Box>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <Routes>\n        <Route index path=\"/\" element={<LandingPage />} />\n        <Route\n          path=\"/events\"\n          element={<Events />}\n          errorElement={<h1>Event Error</h1>}\n        />\n        <Route\n          path=\"/gallery\"\n          element={<Gallery />}\n          errorElement={<h1>Gallary Error</h1>}\n        />\n        <Route\n          path=\"/social\"\n          element={<Social />}\n          errorElement={<h1>Gallary Error</h1>}\n        />\n        <Route\n          path=\"/foodService\"\n          element={<FoodService />}\n          errorElement={<h1>Gallary Error</h1>}\n        />\n        <Route\n          path=\"/advertise/swad\"\n          element={<Swad />}\n          errorElement={<h1>Error in Advertise</h1>}\n        />\n      </Routes>\n      <Outlet />\n    </>\n  );\n};\nexport default Root;\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter, Outlet, RouterProvider } from \"react-router-dom\";\nimport Root from \"./pages/Root\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <Root />\n      <Outlet />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\nimport ViewportProvider from \"./hooks/viewport/viewport-provider\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <ViewportProvider>\n      <App />\n    </ViewportProvider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}